#!/bin/sh


DIR=$( cd -P -- "$(dirname -- "$(command -v -- "$0")")" && pwd -P )
if ! pidof aria2c >/dev/null 2>&1; then
	mkdir /tmp/osuget
	aria2c --enable-rpc=true --on-download-complete="$DIR/osuget-hook" --dir="/tmp/osuget" --max-concurrent-downloads=2 --max-connection-per-server=2 -D --log=/tmp/osuget/aria2.log
fi

. "${XDG_CONFIG_HOME:-$HOME/.config}/osuget/config"

get_download_url() {
	echo "https://osu.ppy.sh/beatmapsets/$1/download"
}

get_page_url() {
	echo "https://osu.ppy.sh/beatmapsets/$1"
}

get_beatmapset_id() {
	if echo "$@" | grep -E "^https?://osu.ppy.sh/b/" > /dev/null; then
		BEATMAPSET_URL=$(curl -sL --head "$(echo "$@" | sed -E "s!^http://!https://!")" | grep location | sed "s/location: //")
		get_beatmapset_id "$BEATMAPSET_URL"
	else
		echo "$@" | sed -E 's!.*(osuget:|https?:\/\/osu\.ppy\.sh\/(b|beatmapsets)\/)([0-9]+).*!\3!'
	fi
}

download() {
	# DOWNLOAD_PATH=$(echo "$1" | sed "s!^~/!$HOME/!")
	ID="$2"
	DOWNLOAD_URL="$3"
	REFERER_URL="$4"
	# notify Debug "$DOWNLOAD_URL $DOWNLOAD_PATH $REFERER_URL"
	curl -s http://localhost:6800/jsonrpc -d "{\"jsonrpc\":\"2.0\",\"id\":\"$ID\",\"method\":\"aria2.addUri\",\"params\":[[\"$DOWNLOAD_URL\"], {\"conditional-get\": true, \"allow-overwrite\": true, \"auto-file-renaming\": false, \"content-disposition-default-utf8\": true, \"header\": \"$OSU_COOKIE\", \"referer\": \"$REFERER_URL\"}]}" > /dev/null
	# wget --timestamping --content-disposition --header="$OSU_COOKIE" --header "Referer: $REFERER_URL" "$DOWNLOAD_URL" --directory-prefix="$DOWNLOAD_PATH"
}

notify() {
	echo "osuget: $1 $2"
	notify-send --app-name=osuget --urgency=low "$1" "$2"
}

INPUT="$1"
if [ ! "$INPUT" ] || ! echo "$INPUT" | grep -E "^((osuget:\/?\/?)?[0-9]+|https?:\/\/osu\.ppy\.sh\/(b|beatmapsets)\/[0-9].*)$" > /dev/null; then
	notify "Error" "Invalid input. Expected beatmapset ID or URL. Input: $*"
	exit 1
fi

GAMEDIR="${OSU_GAMEDIR:-$2}"
ID=$(get_beatmapset_id "$INPUT")

if [ ! "$ID" ]; then
	notify "Error" "Invalid ID"
	exit 2
fi

if [ "$(find "$GAMEDIR" -maxdepth 1 -regextype posix-extended -iregex ".*/$ID([^0-9]|$)")" != '' ]; then
	notify "Error" "Beatmapset is already downloaded"
	exit 4
elif [ "$(find "/tmp/osuget" -maxdepth 1 -regextype posix-extended -iregex ".*/$ID([^0-9]|$)")" != '' ]; then
	notify "Error" "Beatmapset is already downloading"
	exit 5
fi

if download "$GAMEDIR" "$ID" "$(get_download_url "$ID")" "$(get_page_url "$ID")"; then
	#notify "Download finished" "ID: $ID"
	notify "Download started" "ID: $ID"
	exit 0
else
	notify "Download failed" "ID: $ID"
	exit 3
fi
